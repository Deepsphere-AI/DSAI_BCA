
/*******************************************************************************************

File Name       :   CSLAB_ABSTRACT_PARAMETERS_V1
Purpose 	:   A Program for Abstract Parameters in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   08/02/2019 09:31 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				08/02/2019		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

## Program Description : A Program for Abstract Parameters in Scala

## Scala Development Environment & Runtime - Eclipse IDE, Anaconda, Jupyter

import scala.reflect.runtime.universe._

abstract class AbstractParams[T: TypeTag] {

  private def tag: TypeTag[T] = typeTag[T]

  override def toString: String = {
    val vAR_CSLAB_tpe = tag.tpe
    val vAR_CSLAB_allAccessors = vAR_CSLAB_tpe.decls.collect {
      case m: MethodSymbol if m.isCaseAccessor => m
    }
    val vAR_CSLAB_mirror = runtimeMirror(getClass.getClassLoader)
    val vAR_CSLAB_instanceMirror = vAR_CSLAB_mirror.reflect(this)
    vAR_CSLAB_allAccessors.map { vAR_CSLAB_f =>
      val vAR_CSLAB_paramName = vAR_CSLAB_f.name.toString
      val vAR_CSLAB_fieldMirror = vAR_CSLAB_instanceMirror.reflectField(vAR_CSLAB_f)
      val vAR_CSLAB_paramValue = vAR_CSLAB_fieldMirror.get
      s"  $vAR_CSLAB_paramName:\t$vAR_CSLAB_paramValue"
    }.mkString("{\n", ",\n", "\n}")
  }
}

toString
	 
/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  
