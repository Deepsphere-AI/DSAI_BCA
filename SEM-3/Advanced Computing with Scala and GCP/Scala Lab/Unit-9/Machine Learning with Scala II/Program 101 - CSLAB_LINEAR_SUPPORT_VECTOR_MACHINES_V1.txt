
/*******************************************************************************************

File Name       :   CSLAB_LINEAR_SUPPORT_VECTOR_MACHINES_V1
Purpose 	:   A Program for Linear Support Vector Machines in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   07/02/2019 10:21 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				07/02/2019		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

## Program Description : A Program for Linear Support Vector Machines in Scala

## Scala Development Environment & Runtime - Eclipse IDE, Anaconda, Jupyter

import org.apache.spark.mllib.classification.{SVMModel, SVMWithSGD}

import org.apache.spark.mllib.evaluation.BinaryClassificationMetrics

import org.apache.spark.mllib.util.MLUtils

var vAR_CSLAB_ENV_PATH = sys.env("SCALA_TUTORIAL_PATH2")
       
var vAR_CSLAB_DATA_FILE =  "sample_libsvm_data.txt";
      
var vAR_CSLAB_FILE_PATH =  vAR_CSLAB_ENV_PATH + vAR_CSLAB_DATA_FILE

val vAR_CSLAB_data = MLUtils.loadLibSVMFile(sc, vAR_CSLAB_FILE_PATH)

val vAR_CSLAB_splits = vAR_CSLAB_data.randomSplit(Array(0.6, 0.4), seed = 11L)

val vAR_CSLAB_training = vAR_CSLAB_splits(0).cache()

val vAR_CSLAB_test = vAR_CSLAB_splits(1)

val vAR_CSLAB_numIterations = 100

val vAR_CSLAB_model = SVMWithSGD.train(vAR_CSLAB_training, vAR_CSLAB_numIterations)

vAR_CSLAB_model.clearThreshold()

val vAR_CSLAB_scoreAndLabels = vAR_CSLAB_test.map { vAR_CSLAB_point =>
  
val vAR_CSLAB_score = vAR_CSLAB_model.predict(vAR_CSLAB_point.features)
  
(vAR_CSLAB_score, vAR_CSLAB_point.label)

}

val vAR_CSLAB_metrics = new BinaryClassificationMetrics(vAR_CSLAB_scoreAndLabels)

val vAR_CSLAB_auROC = vAR_CSLAB_metrics.areaUnderROC()

println("Area under ROC = " + vAR_CSLAB_auROC)

vAR_CSLAB_model.save(sc, "myModelPath8")

val vAR_CSLAB_sameModel = SVMModel.load(sc, "myModelPath8")


/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  
