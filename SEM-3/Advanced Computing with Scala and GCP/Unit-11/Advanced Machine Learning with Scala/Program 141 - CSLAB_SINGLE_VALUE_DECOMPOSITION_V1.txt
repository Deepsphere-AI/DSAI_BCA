
/*******************************************************************************************

File Name       :   CSLAB_SINGLE_VALUE_DECOMPOSITION_V1
Purpose 	:   A Program for Single Value Decomposition in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   11/02/2019 13:13 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				11/02/2019		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

## Program Description : A Program for Single Value Decomposition in Scala

## Scala Development Environment & Runtime - Eclipse IDE, Anaconda, Jupyter

import org.apache.spark.SparkConf
import org.apache.spark.SparkContext
import org.apache.spark.mllib.linalg.Matrix
import org.apache.spark.mllib.linalg.SingularValueDecomposition
import org.apache.spark.mllib.linalg.Vector
import org.apache.spark.mllib.linalg.Vectors
import org.apache.spark.mllib.linalg.distributed.RowMatrix

object SVDExample {

  def main(args: Array[String]): Unit = {

    val vAR_CSLAB_conf = new SparkConf().setAppName("SVDExample")

    val vAR_CSLAB_data = Array(
      Vectors.sparse(5, Seq((1, 1.0), (3, 7.0))),
      Vectors.dense(2.0, 0.0, 3.0, 4.0, 5.0),
      Vectors.dense(4.0, 0.0, 0.0, 6.0, 7.0))

    val vAR_CSLAB_rows = sc.parallelize(vAR_CSLAB_data)

    val vAR_CSLAB_mat: RowMatrix = new RowMatrix(vAR_CSLAB_rows)

    // Compute the top 5 singular values and corresponding singular vectors.
    val vAR_CSLAB_svd: SingularValueDecomposition[RowMatrix, Matrix] = vAR_CSLAB_mat.computeSVD(5, computeU = true)
      
    val vAR_CSLAB_U: RowMatrix = vAR_CSLAB_svd.U  // The U factor is a RowMatrix.
      
    val vAR_CSLAB_s: Vector = vAR_CSLAB_svd.s     // The singular values are stored in a local dense vector.
      
    val vAR_CSLAB_V: Matrix = vAR_CSLAB_svd.V     // The V factor is a local dense matrix.
      
    // $example off$
    val vAR_CSLAB_collect = vAR_CSLAB_U.rows.collect()
      
    println("U factor is:")
      
    vAR_CSLAB_collect.foreach { vAR_CSLAB_vector => println(vAR_CSLAB_vector) }
      
    println(s"Singular values are: $vAR_CSLAB_s")
      
    println(s"V factor is:\n$vAR_CSLAB_V")
      
  }
    
}

SVDExample.main(Array(""))
	 
/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  