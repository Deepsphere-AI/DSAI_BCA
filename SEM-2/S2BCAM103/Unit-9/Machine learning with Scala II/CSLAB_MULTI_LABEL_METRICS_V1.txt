
/*******************************************************************************************

File Name       :   CSLAB_MULTI_LABEL_METRICS_V1
Purpose 	:   Code for Multi Label Metrics in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   01/21/2015 15:12 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				01/21/2015		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

  package org.apache.spark.examples.mllib

  import org.apache.spark.{SparkConf, SparkContext}

  import org.apache.spark.mllib.evaluation.MultilabelMetrics

  import org.apache.spark.rdd.RDD

  object MultiLabelMetricsExample {
  
  def main(args: Array[String]): Unit = {
    
  val conf = new SparkConf().setAppName("MultiLabelMetricsExample")
   
  val sc = new SparkContext(conf)
  
  val scoreAndLabels: RDD[(Array[Double], Array[Double])] = sc.parallelize(
      
  Seq((Array(0.0, 1.0), Array(0.0, 2.0)),
  
  (Array(0.0, 2.0), Array(0.0, 1.0)),
  
  (Array.empty[Double], Array(0.0)),
  
  (Array(2.0), Array(2.0)),
  
  (Array(2.0, 0.0), Array(2.0, 0.0)),
  
  (Array(0.0, 1.0, 2.0), Array(0.0, 1.0)),
  
  (Array(1.0), Array(1.0, 2.0))), 2)

  val metrics = new MultilabelMetrics(scoreAndLabels)

  println(s"Recall = ${metrics.recall}")
 
  println(s"Precision = ${metrics.precision}")

  println(s"F1 measure = ${metrics.f1Measure}")
 
  println(s"Accuracy = ${metrics.accuracy}")

  metrics.labels.foreach(label =>
  
  println(s"Class $label precision = ${metrics.precision(label)}"))

  metrics.labels.foreach(label => println(s"Class $label recall = ${metrics.recall(label)}"))
  
  metrics.labels.foreach(label => println(s"Class $label F1-score = ${metrics.f1Measure(label)}"))

  println(s"Micro recall = ${metrics.microRecall}")
  
  println(s"Micro precision = ${metrics.microPrecision}")
  
  println(s"Micro F1 measure = ${metrics.microF1Measure}")

  println(s"Hamming loss = ${metrics.hammingLoss}")

  println(s"Subset accuracy = ${metrics.subsetAccuracy}")
  
  }

  }

/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  
