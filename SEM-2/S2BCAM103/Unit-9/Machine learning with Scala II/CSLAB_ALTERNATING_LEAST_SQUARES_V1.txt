
/*******************************************************************************************

File Name       :   CSLAB_ALTERNATING_LEAST_SQUARES_V1
Purpose 	:   Code for Alternating Least Squares in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   01/20/2015 12:48 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				01/20/2015		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

  import org.apache.spark.mllib.recommendation.ALS

  import org.apache.spark.mllib.recommendation.Rating

  val data = sc.textFile("data/mllib/als/test.data")

  val ratings = data.map(_.split(',') match { case Array(user, item, rate) =>
    Rating(user.toInt, item.toInt, rate.toDouble)
  })

  val rank = 10

  val numIterations = 20

  val model = ALS.train(ratings, rank, numIterations, 0.01)

  val usersProducts = ratings.map { case Rating(user, product, rate) =>
  (user, product)

  }
 
  val predictions = 
  
  model.predict(usersProducts).map { case Rating(user, product, rate) => 
    ((user, product), rate)
  
  }

  val ratesAndPreds = ratings.map { case Rating(user, product, rate) => 
  ((user, product), rate)

  }.join(predictions)

  val MSE = ratesAndPreds.map { case ((user, product), (r1, r2)) => 
  
  val err = (r1 - r2)
  
  err * err

  }.mean()

  println("Mean Squared Error = " + MSE)

/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  
