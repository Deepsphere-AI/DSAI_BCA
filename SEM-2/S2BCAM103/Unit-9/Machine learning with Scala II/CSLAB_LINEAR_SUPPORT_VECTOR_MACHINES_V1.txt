
/*******************************************************************************************

File Name       :   CSLAB_LINEAR_SUPPORT_VECTOR_MACHINES_V1
Purpose 	:   Code for Linear Support Vector Machines in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   01/19/2015 12:04 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				01/19	/2015		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

  import org.apache.spark.mllib.classification.{SVMModel, SVMWithSGD}

  import org.apache.spark.mllib.evaluation.BinaryClassificationMetrics

  import org.apache.spark.mllib.util.MLUtils

  val data = MLUtils.loadLibSVMFile(sc, "data/mllib/sample_libsvm_data.txt")

  val splits = data.randomSplit(Array(0.6, 0.4), seed = 11L)

  val training = splits(0).cache()

  val test = splits(1)

  val numIterations = 100

  val model = SVMWithSGD.train(training, numIterations)

  model.clearThreshold()

  val scoreAndLabels = test.map { point =>
  
  val score = model.predict(point.features)
  
  (score, point.label)

  }

  val metrics = new BinaryClassificationMetrics(scoreAndLabels)

  val auROC = metrics.areaUnderROC()

  println("Area under ROC = " + auROC)

  model.save(sc, "myModelPath")

  val sameModel = SVMModel.load(sc, "myModelPath")

/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  
