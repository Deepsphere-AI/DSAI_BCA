
/*******************************************************************************************

File Name       :   CSLAB_FINALLY_BLOCK_V1
Purpose 	:   A Program for Finally Block in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   13/02/2019 17:26 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				13/02/2019		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

## Program Description : A Program for Finally Block in Scala

## Scala Development Environment & Runtime - Eclipse IDE, Anaconda, Jupyter

class ExceptionExample{  
    def divide(vAR_CSLAB_a:Int, vAR_CSLAB_b:Int) = {  
        try{  
            vAR_CSLAB_a/vAR_CSLAB_b  
            var vAR_CSLAB_arr = Array(1,2)  
            vAR_CSLAB_arr(10)  
        }catch{  
            case vAR_CSLAB_e: ArithmeticException => println(vAR_CSLAB_e)  
            case vAR_CSLAB_ex: Exception =>println(vAR_CSLAB_ex)  
            case vAR_CSLAB_th: Throwable=>println("found a unknown exception"+vAR_CSLAB_th)  
        }  
        finally{  
            println("Finaly block always executes")  
        }  
        println("Rest of the code is executing...")  
    }  
}  
  
  
object MainObject{  
    def main(args:Array[String]){  
        var vAR_CSLAB_e = new ExceptionExample()  
        vAR_CSLAB_e.divide(100,10)  
   
    }  
}  

MainObject.main(Array(""))

/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  
