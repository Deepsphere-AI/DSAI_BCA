
/*******************************************************************************************

File Name       :   CSLAB_GAUSSIAN_MIXTURE_MODEL_V1
Purpose 	:   Code for Gaussian Mixture Model in Scala
Author		:   Durga Prasad
Reviewer 	:   Jothi Periasamy
Date and Time	:   01/18/2015 18:04 hrs
Version		:   1.0	
Change History 	: 

____________________________________________________________________________________________

	Who				   When 			  Why
____________________________________________________________________________________________


	DP				01/18/2015		    Initital Release 

____________________________________________________________________________________________


/*******************************************************************************************

  import org.apache.spark.mllib.clustering.GaussianMixture

  import org.apache.spark.mllib.clustering.GaussianMixtureModel
 
  import org.apache.spark.mllib.linalg.Vectors

  // Load and parse the data

  val data = sc.textFile("data/mllib/gmm_data.txt")

  val parsedData = data.map(s => Vectors.dense(s.trim.split(' ').map(_.toDouble))).cache()

  // Cluster the data into two classes using GaussianMixture

  val gmm = new GaussianMixture().setK(2).run(parsedData)

  // Save and load model

  gmm.save(sc, "myGMMModel")

  val sameModel = GaussianMixtureModel.load(sc, "myGMMModel")

  // output parameters of max-likelihood model

  for (i <- 0 until gmm.k) {
  
  println("weight=%f\nmu=%s\nsigma=\n%s\n" format
    
  (gmm.weights(i), gmm.gaussians(i).mu, gmm.gaussians(i).sigma))
}

/*******************************************************************************************
  Disclaimer.

      We are providing this code block strictly for learning and researching, this is not a 
production ready code. We have no liability on this particular code under any circumstances; 
users should use this code on their own risk. All software, hardware and othr products that 
are referenced in these materials belong to the respective vendor who developed or who owns 
this product.

/*******************************************************************************************
  
